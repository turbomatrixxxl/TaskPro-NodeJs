{
  "openapi": "3.0.0",
  "info": {
    "title": "TaskPro API",
    "version": "1.0.0",
    "description": "API for managing tasks, users, and projects"
  },
  "servers": [
    {
      "url": "https://taskpro-nodejs.onrender.com",
      "description": "Hosting server"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUp"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "500": {
            "description": "Registration failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify/{verificationToken}": {
      "get": {
        "summary": "Verify user email",
        "description": "Verifies the user's email using a verification token.",
        "tags": ["Auth"],
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "description": "The verification token to confirm the user's email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email verified successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired verification token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": { "error": "Invalid or expired token" }
              }
            }
          }
        }
      },
      "404": {
        "description": "Verification token not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string" }
              },
              "example": { "error": "Token not found" }
            }
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "summary": "Resend verification email",
        "description": "Resends the verification email to the user.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email resent successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse",
                  "example": { "error": "Invalid or already verified email" }
                }
              }
            }
          },
          "404": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  },
                  "example": { "error": "Email not found" }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "summary": "Logout user",
        "description": "Logs out the currently authenticated user by invalidating the token.",
        "tags": ["Auth"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/update": {
      "patch": {
        "summary": "Update user information",
        "description": "Allows the user to update their profile information.",
        "tags": ["Auth"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "newusername"
                  },
                  "email": {
                    "type": "string",
                    "example": "newemail@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "newpassword123"
                  }
                },
                "required": ["username", "email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/avatar": {
      "patch": {
        "summary": "Update user avatar",
        "description": "Allows the user to update their avatar image.",
        "tags": ["Auth"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Avatar image file"
                  }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                },
                "example": {
                  "avatarUrl": "https://res.cloudinary.com/your-cloud-name/image/upload/your-file-path.png"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file type or format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid file type. Only images are allowed."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "summary": "Get current logged-in user",
        "tags": ["Auth"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Successfully fetched the current user details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/help-request": {
      "post": {
        "summary": "Send help request email",
        "description": "Sends a help request email with provided email and comment.",
        "tags": ["Help"],
        "requestBody": {
          "description": "Help request details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com",
                    "description": "Email of the user sending the help request"
                  },
                  "comment": {
                    "type": "string",
                    "example": "I need help with the application.",
                    "description": "Comment or help request details"
                  }
                },
                "required": ["email", "comment"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Help request email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Help request email sent successfully!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "comment": {
                          "type": "string",
                          "example": "I need help with the application."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to send help request email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to send help request email."
                    },
                    "error": {
                      "type": "string",
                      "example": "Error message detailing the issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/theme": {
      "patch": {
        "summary": "Update theme",
        "tags": ["User preferences"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "theme": {
                    "type": "string",
                    "enum": ["dark", "light", "violet"]
                  }
                },
                "required": ["theme"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects": {
      "post": {
        "summary": "Create a new project",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the project",
                    "example": "New Project"
                  },
                  "icon": {
                    "type": "integer",
                    "description": "Icon of the project (0 to 7, default 0)",
                    "default": 0,
                    "example": 0
                  },
                  "background": {
                    "type": "string",
                    "description": "Background of the project (default 'none')",
                    "default": "none",
                    "example": "none"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/columns": {
      "post": {
        "summary": "Add column",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "columnName": { "type": "string" }
                },
                "required": ["columnName"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Column added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/column/{columnName}": {
      "patch": {
        "summary": "Update column title",
        "description": "Allows the user to update the title of a specific column within a project.",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "Name of the project containing the column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "description": "Name of the column to be updated",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name for the column",
                    "example": "Updated Column Name"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Column title successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Column title successfully updated"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or error during update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/columns/{columnName}/tasks": {
      "post": {
        "summary": "Add task",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/column/{columnName}/tasks/{taskName}": {
      "patch": {
        "summary": "Update task",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the task"
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["Low", "Medium", "High", "Without priority"],
                    "description": "Priority of the task"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Due date of the task"
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/column/{columnName}/tasks/{taskName}/move": {
      "patch": {
        "summary": "Move task",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "toColumnName": { "type": "string" }
                },
                "required": ["toColumnName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task moved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/columns/{columnName}/tasks/{taskName}": {
      "delete": {
        "summary": "Delete task",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/columns/{columnName}": {
      "delete": {
        "summary": "Delete column",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "columnName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Column deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}": {
      "delete": {
        "summary": "Delete a project",
        "description": "Deletes a project by its name.",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The name of the project to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully",
            "content": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectName}/appearance": {
      "patch": {
        "summary": "Update project appearance",
        "description": "Updates the title, icon and background of a project.",
        "tags": ["Projects"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The name of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Project appearance updates",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name for the project",
                    "example": "NewName"
                  },
                  "icon": {
                    "type": "number",
                    "description": "Icon index",
                    "example": 3
                  },
                  "background": {
                    "type": "string",
                    "description": "Background index or 'none'",
                    "example": "5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project appearance updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Project appearance updated successfully"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSignUp": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "email", "password"]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["email", "password"]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "avatarURL": { "type": "string" },
          "verify": { "type": "boolean" },
          "projects": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Project" }
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "user": { "$ref": "#/components/schemas/UserResponse" }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "columns": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Column" }
          },
          "icon": {
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 7
          },
          "background": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "none"
            ],
            "default": "none"
          }
        }
      },
      "Column": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "tasks": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Task" }
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "priority": {
            "type": "string",
            "enum": ["Without priority", "Low", "Medium", "High"],
            "default": "Without priority"
          },
          "dueDate": { "type": "string", "format": "date" }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
